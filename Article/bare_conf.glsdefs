\ifglsentryexists{FPGA}{}%
{%
\gls@defglossaryentry{FPGA}%
{%
name={FPGA},%
sort={FPGA},%
type={acronym},%
first={Field Programmable Gate-Array\glsspace (FPGA)},%
firstplural={Field Programmable Gate-Arrays\glsspace (FPGAs)},%
text={FPGA},%
plural={FPGAs},%
description={Field Programmable Gate-Array},%
descriptionplural={Field Programmable Gate-Array\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Field Programmable Gate-Array},%
longplural={Field Programmable Gate-Arrays},%
short={FPGA},%
shortplural={FPGAs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{FPGAs}{}%
{%
\gls@defglossaryentry{FPGAs}%
{%
name={FPGAs},%
sort={FPGAs},%
type={acronym},%
first={Field Programmable Gate-Arrays\glsspace (FPGAs)},%
firstplural={Field Programmable Gate-Arrayss\glsspace (FPGAss)},%
text={FPGAs},%
plural={FPGAss},%
description={Field Programmable Gate-Arrays},%
descriptionplural={Field Programmable Gate-Arrays\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Field Programmable Gate-Arrays},%
longplural={Field Programmable Gate-Arrayss},%
short={FPGAs},%
shortplural={FPGAss},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{CL}{}%
{%
\gls@defglossaryentry{CL}%
{%
name={CL},%
sort={CL},%
type={acronym},%
first={Configurable Logic\glsspace (CL)},%
firstplural={Configurable Logics\glsspace (CLs)},%
text={CL},%
plural={CLs},%
description={Configurable Logic},%
descriptionplural={Configurable Logic\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Configurable Logic},%
longplural={Configurable Logics},%
short={CL},%
shortplural={CLs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ASIC}{}%
{%
\gls@defglossaryentry{ASIC}%
{%
name={ASIC},%
sort={ASIC},%
type={acronym},%
first={Application Specific Integrated Circuit\glsspace (ASIC)},%
firstplural={Application Specific Integrated Circuits\glsspace (ASICs)},%
text={ASIC},%
plural={ASICs},%
description={Application Specific Integrated Circuit},%
descriptionplural={Application Specific Integrated Circuit\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Application Specific Integrated Circuit},%
longplural={Application Specific Integrated Circuits},%
short={ASIC},%
shortplural={ASICs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{HDL}{}%
{%
\gls@defglossaryentry{HDL}%
{%
name={HDL},%
sort={HDL},%
type={acronym},%
first={Hardware Description Language\glsspace (HDL)},%
firstplural={Hardware Description Languages\glsspace (HDLs)},%
text={HDL},%
plural={HDLs},%
description={Hardware Description Language},%
descriptionplural={Hardware Description Language\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Hardware Description Language},%
longplural={Hardware Description Languages},%
short={HDL},%
shortplural={HDLs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ISE}{}%
{%
\gls@defglossaryentry{ISE}%
{%
name={ISE},%
sort={ISE},%
type={acronym},%
first={Integrated Synthesis Environment\glsspace (ISE)},%
firstplural={Integrated Synthesis Environments\glsspace (ISEs)},%
text={ISE},%
plural={ISEs},%
description={Integrated Synthesis Environment},%
descriptionplural={Integrated Synthesis Environment\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Integrated Synthesis Environment},%
longplural={Integrated Synthesis Environments},%
short={ISE},%
shortplural={ISEs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{IOB}{}%
{%
\gls@defglossaryentry{IOB}%
{%
name={IOB},%
sort={IOB},%
type={acronym},%
first={Input-Output Blocks\glsspace (IOB)},%
firstplural={Input-Output Blockss\glsspace (IOBs)},%
text={IOB},%
plural={IOBs},%
description={Input-Output Blocks},%
descriptionplural={Input-Output Blocks\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Input-Output Blocks},%
longplural={Input-Output Blockss},%
short={IOB},%
shortplural={IOBs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{CLB}{}%
{%
\gls@defglossaryentry{CLB}%
{%
name={CLB},%
sort={CLB},%
type={acronym},%
first={Configurable Logic Block\glsspace (CLB)},%
firstplural={Configurable Logic Blocks\glsspace (CLBs)},%
text={CLB},%
plural={CLBs},%
description={Configurable Logic Block},%
descriptionplural={Configurable Logic Block\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Configurable Logic Block},%
longplural={Configurable Logic Blocks},%
short={CLB},%
shortplural={CLBs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{IOBs}{}%
{%
\gls@defglossaryentry{IOBs}%
{%
name={IOBs},%
sort={IOBs},%
type={acronym},%
first={Input-Output Blocks\glsspace (IOBs)},%
firstplural={Input-Output Blockss\glsspace (IOBss)},%
text={IOBs},%
plural={IOBss},%
description={Input-Output Blocks},%
descriptionplural={Input-Output Blocks\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Input-Output Blocks},%
longplural={Input-Output Blockss},%
short={IOBs},%
shortplural={IOBss},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{CRC}{}%
{%
\gls@defglossaryentry{CRC}%
{%
name={CRC},%
sort={CRC},%
type={acronym},%
first={Cyclic Redundancy Check\glsspace (CRC)},%
firstplural={Cyclic Redundancy Checks\glsspace (CRCs)},%
text={CRC},%
plural={CRCs},%
description={Cyclic Redundancy Check},%
descriptionplural={Cyclic Redundancy Check\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Cyclic Redundancy Check},%
longplural={Cyclic Redundancy Checks},%
short={CRC},%
shortplural={CRCs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{CLBs}{}%
{%
\gls@defglossaryentry{CLBs}%
{%
name={CLBs},%
sort={CLBs},%
type={acronym},%
first={Configurable Logic Blocks\glsspace (CLBs)},%
firstplural={Configurable Logic Blockss\glsspace (CLBss)},%
text={CLBs},%
plural={CLBss},%
description={Configurable Logic Blocks},%
descriptionplural={Configurable Logic Blocks\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Configurable Logic Blocks},%
longplural={Configurable Logic Blockss},%
short={CLBs},%
shortplural={CLBss},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{IOI}{}%
{%
\gls@defglossaryentry{IOI}%
{%
name={IOI},%
sort={IOI},%
type={acronym},%
first={Input-Output Interconnect\glsspace (IOI)},%
firstplural={Input-Output Interconnects\glsspace (IOIs)},%
text={IOI},%
plural={IOIs},%
description={Input-Output Interconnect},%
descriptionplural={Input-Output Interconnect\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Input-Output Interconnect},%
longplural={Input-Output Interconnects},%
short={IOI},%
shortplural={IOIs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{IOIs}{}%
{%
\gls@defglossaryentry{IOIs}%
{%
name={IOIs},%
sort={IOIs},%
type={acronym},%
first={Input-Output Interconnects\glsspace (IOIs)},%
firstplural={Input-Output Interconnectss\glsspace (IOIss)},%
text={IOIs},%
plural={IOIss},%
description={Input-Output Interconnects},%
descriptionplural={Input-Output Interconnects\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Input-Output Interconnects},%
longplural={Input-Output Interconnectss},%
short={IOIs},%
shortplural={IOIss},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{IP}{}%
{%
\gls@defglossaryentry{IP}%
{%
name={IP},%
sort={IP},%
type={acronym},%
first={Intelectual Property\glsspace (IP)},%
firstplural={Intelectual Propertys\glsspace (IPs)},%
text={IP},%
plural={IPs},%
description={Intelectual Property},%
descriptionplural={Intelectual Property\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Intelectual Property},%
longplural={Intelectual Propertys},%
short={IP},%
shortplural={IPs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{RO}{}%
{%
\gls@defglossaryentry{RO}%
{%
name={RO},%
sort={RO},%
type={acronym},%
first={Ring Oscillator\glsspace (RO)},%
firstplural={Ring Oscillators\glsspace (ROs)},%
text={RO},%
plural={ROs},%
description={Ring Oscillator},%
descriptionplural={Ring Oscillator\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Ring Oscillator},%
longplural={Ring Oscillators},%
short={RO},%
shortplural={ROs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ROs}{}%
{%
\gls@defglossaryentry{ROs}%
{%
name={RO},%
sort={RO},%
type={acronym},%
first={Ring Oscillators\glsspace (RO)},%
firstplural={Ring Oscillatorss\glsspace (ROs)},%
text={RO},%
plural={ROs},%
description={Ring Oscillators},%
descriptionplural={Ring Oscillators\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Ring Oscillators},%
longplural={Ring Oscillatorss},%
short={RO},%
shortplural={ROs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{LUT}{}%
{%
\gls@defglossaryentry{LUT}%
{%
name={LUT},%
sort={LUT},%
type={acronym},%
first={Look-up Table\glsspace (LUT)},%
firstplural={Look-up Tables\glsspace (LUTs)},%
text={LUT},%
plural={LUTs},%
description={Look-up Table},%
descriptionplural={Look-up Table\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Look-up Table},%
longplural={Look-up Tables},%
short={LUT},%
shortplural={LUTs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{IR}{}%
{%
\gls@defglossaryentry{IR}%
{%
name={IR},%
sort={IR},%
type={acronym},%
first={Interconnect Resources\glsspace (IR)},%
firstplural={Interconnect Resourcess\glsspace (IRs)},%
text={IR},%
plural={IRs},%
description={Interconnect Resources},%
descriptionplural={Interconnect Resources\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Interconnect Resources},%
longplural={Interconnect Resourcess},%
short={IR},%
shortplural={IRs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{SM}{}%
{%
\gls@defglossaryentry{SM}%
{%
name={SM},%
sort={SM},%
type={acronym},%
first={Switching Matrix\glsspace (SM)},%
firstplural={Switching Matrixs\glsspace (SMs)},%
text={SM},%
plural={SMs},%
description={Switching Matrix},%
descriptionplural={Switching Matrix\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Switching Matrix},%
longplural={Switching Matrixs},%
short={SM},%
shortplural={SMs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{PIP}{}%
{%
\gls@defglossaryentry{PIP}%
{%
name={PIP},%
sort={PIP},%
type={acronym},%
first={Programmable-Interconnect-Points\glsspace (PIP)},%
firstplural={Programmable-Interconnect-Pointss\glsspace (PIPs)},%
text={PIP},%
plural={PIPs},%
description={Programmable-Interconnect-Points},%
descriptionplural={Programmable-Interconnect-Points\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Programmable-Interconnect-Points},%
longplural={Programmable-Interconnect-Pointss},%
short={PIP},%
shortplural={PIPs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{XDL}{}%
{%
\gls@defglossaryentry{XDL}%
{%
name={XDL},%
sort={XDL},%
type={acronym},%
first={\protect \textit {Xilinx}\protect \nobreakspace {}Design Language\glsspace (XDL)},%
firstplural={\protect \textit {Xilinx}\protect \nobreakspace {}Design Languages\glsspace (XDLs)},%
text={XDL},%
plural={XDLs},%
description={\Xilinx Design Language},%
descriptionplural={\Xilinx Design Language\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={\protect \textit {Xilinx}\protect \nobreakspace {}Design Language},%
longplural={\protect \textit {Xilinx}\protect \nobreakspace {}Design Languages},%
short={XDL},%
shortplural={XDLs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{RDB}{}%
{%
\gls@defglossaryentry{RDB}%
{%
name={RDB},%
sort={RDB},%
type={acronym},%
first={Readback File\glsspace (RDB)},%
firstplural={Readback Files\glsspace (RDBs)},%
text={RDB},%
plural={RDBs},%
description={Readback File},%
descriptionplural={Readback File\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Readback File},%
longplural={Readback Files},%
short={RDB},%
shortplural={RDBs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{MSD}{}%
{%
\gls@defglossaryentry{MSD}%
{%
name={MSD},%
sort={MSD},%
type={acronym},%
first={The mask file used to hide undesirable configuration information\glsspace (MSD)},%
firstplural={The mask file used to hide undesirable configuration informations\glsspace (MSDs)},%
text={MSD},%
plural={MSDs},%
description={The mask file used to hide undesirable configuration information},%
descriptionplural={The mask file used to hide undesirable configuration information\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={The mask file used to hide undesirable configuration information},%
longplural={The mask file used to hide undesirable configuration informations},%
short={MSD},%
shortplural={MSDs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{DFF}{}%
{%
\gls@defglossaryentry{DFF}%
{%
name={DFF},%
sort={DFF},%
type={acronym},%
first={D Flip-Flop\glsspace (DFF)},%
firstplural={D Flip-Flops\glsspace (DFFs)},%
text={DFF},%
plural={DFFs},%
description={D Flip-Flop},%
descriptionplural={D Flip-Flop\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={D Flip-Flop},%
longplural={D Flip-Flops},%
short={DFF},%
shortplural={DFFs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{TCL}{}%
{%
\gls@defglossaryentry{TCL}%
{%
name={TCL},%
sort={TCL},%
type={acronym},%
first={Tool Command Line\glsspace (TCL)},%
firstplural={Tool Command Lines\glsspace (TCLs)},%
text={TCL},%
plural={TCLs},%
description={Tool Command Line},%
descriptionplural={Tool Command Line\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Tool Command Line},%
longplural={Tool Command Lines},%
short={TCL},%
shortplural={TCLs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{JTAG}{}%
{%
\gls@defglossaryentry{JTAG}%
{%
name={JTAG},%
sort={JTAG},%
type={acronym},%
first={Joint Test Action Group\glsspace (JTAG)},%
firstplural={Joint Test Action Groups\glsspace (JTAGs)},%
text={JTAG},%
plural={JTAGs},%
description={Joint Test Action Group},%
descriptionplural={Joint Test Action Group\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Joint Test Action Group},%
longplural={Joint Test Action Groups},%
short={JTAG},%
shortplural={JTAGs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{SRL}{}%
{%
\gls@defglossaryentry{SRL}%
{%
name={SRL},%
sort={SRL},%
type={acronym},%
first={Shift Right Left Module\glsspace (SRL)},%
firstplural={Shift Right Left Modules\glsspace (SRLs)},%
text={SRL},%
plural={SRLs},%
description={Shift Right Left Module},%
descriptionplural={Shift Right Left Module\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Shift Right Left Module},%
longplural={Shift Right Left Modules},%
short={SRL},%
shortplural={SRLs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{RAM}{}%
{%
\gls@defglossaryentry{RAM}%
{%
name={RAM},%
sort={RAM},%
type={acronym},%
first={Random Access Memory\glsspace (RAM)},%
firstplural={Random Access Memorys\glsspace (RAMs)},%
text={RAM},%
plural={RAMs},%
description={Random Access Memory},%
descriptionplural={Random Access Memory\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Random Access Memory},%
longplural={Random Access Memorys},%
short={RAM},%
shortplural={RAMs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{LL}{}%
{%
\gls@defglossaryentry{LL}%
{%
name={LL},%
sort={LL},%
type={acronym},%
first={Logic Allocation File\glsspace (LL)},%
firstplural={Logic Allocation Files\glsspace (LLs)},%
text={LL},%
plural={LLs},%
description={Logic Allocation File},%
descriptionplural={Logic Allocation File\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Logic Allocation File},%
longplural={Logic Allocation Files},%
short={LL},%
shortplural={LLs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{RBB}{}%
{%
\gls@defglossaryentry{RBB}%
{%
name={RBB},%
sort={RBB},%
type={acronym},%
first={Repeatable Building Blocks\glsspace (RBB)},%
firstplural={Repeatable Building Blockss\glsspace (RBBs)},%
text={RBB},%
plural={RBBs},%
description={Repeatable Building Blocks},%
descriptionplural={Repeatable Building Blocks\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Repeatable Building Blocks},%
longplural={Repeatable Building Blockss},%
short={RBB},%
shortplural={RBBs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{RBA}{}%
{%
\gls@defglossaryentry{RBA}%
{%
name={RBA},%
sort={RBA},%
type={acronym},%
first={Readback ASCII\glsspace (RBA)},%
firstplural={Readback ASCIIs\glsspace (RBAs)},%
text={RBA},%
plural={RBAs},%
description={Readback ASCII},%
descriptionplural={Readback ASCII\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Readback ASCII},%
longplural={Readback ASCIIs},%
short={RBA},%
shortplural={RBAs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{RTL}{}%
{%
\gls@defglossaryentry{RTL}%
{%
name={RTL},%
sort={RTL},%
type={acronym},%
first={Registry Transfer Level\glsspace (RTL)},%
firstplural={Registry Transfer Levels\glsspace (RTLs)},%
text={RTL},%
plural={RTLs},%
description={Registry Transfer Level},%
descriptionplural={Registry Transfer Level\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Registry Transfer Level},%
longplural={Registry Transfer Levels},%
short={RTL},%
shortplural={RTLs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{TV}{}%
{%
\gls@defglossaryentry{TV}%
{%
name={TV},%
sort={TV},%
type={acronym},%
first={Test Vectors\glsspace (TV)},%
firstplural={Test Vectorss\glsspace (TVs)},%
text={TV},%
plural={TVs},%
description={Test Vectors},%
descriptionplural={Test Vectors\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Test Vectors},%
longplural={Test Vectorss},%
short={TV},%
shortplural={TVs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{XOR}{}%
{%
\gls@defglossaryentry{XOR}%
{%
name={XOR},%
sort={XOR},%
type={acronym},%
first={Exclusive OR\glsspace (XOR)},%
firstplural={Exclusive ORs\glsspace (XORs)},%
text={XOR},%
plural={XORs},%
description={Exclusive OR},%
descriptionplural={Exclusive OR\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Exclusive OR},%
longplural={Exclusive ORs},%
short={XOR},%
shortplural={XORs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{XNOR}{}%
{%
\gls@defglossaryentry{XNOR}%
{%
name={XNOR},%
sort={XNOR},%
type={acronym},%
first={Exclusive NOR\glsspace (XNOR)},%
firstplural={Exclusive NORs\glsspace (XNORs)},%
text={XNOR},%
plural={XNORs},%
description={Exclusive NOR},%
descriptionplural={Exclusive NOR\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Exclusive NOR},%
longplural={Exclusive NORs},%
short={XNOR},%
shortplural={XNORs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{UUT}{}%
{%
\gls@defglossaryentry{UUT}%
{%
name={UUT},%
sort={UUT},%
type={acronym},%
first={Unit Under Test\glsspace (UUT)},%
firstplural={Unit Under Tests\glsspace (UUTs)},%
text={UUT},%
plural={UUTs},%
description={Unit Under Test},%
descriptionplural={Unit Under Test\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Unit Under Test},%
longplural={Unit Under Tests},%
short={UUT},%
shortplural={UUTs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{PROM}{}%
{%
\gls@defglossaryentry{PROM}%
{%
name={PROM},%
sort={PROM},%
type={acronym},%
first={Programmable Read-Only Memory\glsspace (PROM)},%
firstplural={Programmable Read-Only Memorys\glsspace (PROMs)},%
text={PROM},%
plural={PROMs},%
description={Programmable Read-Only Memory},%
descriptionplural={Programmable Read-Only Memory\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Programmable Read-Only Memory},%
longplural={Programmable Read-Only Memorys},%
short={PROM},%
shortplural={PROMs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{GUI}{}%
{%
\gls@defglossaryentry{GUI}%
{%
name={GUI},%
sort={GUI},%
type={acronym},%
first={Graphical User-Interface\glsspace (GUI)},%
firstplural={Graphical User-Interfaces\glsspace (GUIs)},%
text={GUI},%
plural={GUIs},%
description={Graphical User-Interface},%
descriptionplural={Graphical User-Interface\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Graphical User-Interface},%
longplural={Graphical User-Interfaces},%
short={GUI},%
shortplural={GUIs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{EDIF}{}%
{%
\gls@defglossaryentry{EDIF}%
{%
name={EDIF},%
sort={EDIF},%
type={acronym},%
first={Electronic Data Interchange Format\glsspace (EDIF)},%
firstplural={Electronic Data Interchange Formats\glsspace (EDIFs)},%
text={EDIF},%
plural={EDIFs},%
description={Electronic Data Interchange Format},%
descriptionplural={Electronic Data Interchange Format\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Electronic Data Interchange Format},%
longplural={Electronic Data Interchange Formats},%
short={EDIF},%
shortplural={EDIFs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{NCF}{}%
{%
\gls@defglossaryentry{NCF}%
{%
name={NCF},%
sort={NCF},%
type={acronym},%
first={Netlist Constraints File\glsspace (NCF)},%
firstplural={Netlist Constraints Files\glsspace (NCFs)},%
text={NCF},%
plural={NCFs},%
description={Netlist Constraints File},%
descriptionplural={Netlist Constraints File\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Netlist Constraints File},%
longplural={Netlist Constraints Files},%
short={NCF},%
shortplural={NCFs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{UI}{}%
{%
\gls@defglossaryentry{UI}%
{%
name={UI},%
sort={UI},%
type={acronym},%
first={User-Interface\glsspace (UI)},%
firstplural={User-Interfaces\glsspace (UIs)},%
text={UI},%
plural={UIs},%
description={User-Interface},%
descriptionplural={User-Interface\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={User-Interface},%
longplural={User-Interfaces},%
short={UI},%
shortplural={UIs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{UIs}{}%
{%
\gls@defglossaryentry{UIs}%
{%
name={UI},%
sort={UI},%
type={acronym},%
first={User-Interfaces\glsspace (UI)},%
firstplural={User-Interfacess\glsspace (UIs)},%
text={UI},%
plural={UIs},%
description={User-Interfaces},%
descriptionplural={User-Interfaces\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={User-Interfaces},%
longplural={User-Interfacess},%
short={UI},%
shortplural={UIs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{DCM}{}%
{%
\gls@defglossaryentry{DCM}%
{%
name={DCM},%
sort={DCM},%
type={acronym},%
first={Digital Clock Managers\glsspace (DCM)},%
firstplural={Digital Clock Managerss\glsspace (DCMs)},%
text={DCM},%
plural={DCMs},%
description={Digital Clock Managers},%
descriptionplural={Digital Clock Managers\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Digital Clock Managers},%
longplural={Digital Clock Managerss},%
short={DCM},%
shortplural={DCMs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ROM}{}%
{%
\gls@defglossaryentry{ROM}%
{%
name={ROM},%
sort={ROM},%
type={acronym},%
first={Read-Only Memory\glsspace (ROM)},%
firstplural={Read-Only Memorys\glsspace (ROMs)},%
text={ROM},%
plural={ROMs},%
description={Read-Only Memory},%
descriptionplural={Read-Only Memory\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Read-Only Memory},%
longplural={Read-Only Memorys},%
short={ROM},%
shortplural={ROMs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{BEL}{}%
{%
\gls@defglossaryentry{BEL}%
{%
name={BEL},%
sort={BEL},%
type={acronym},%
first={Basic Element\glsspace (BEL)},%
firstplural={Basic Elements\glsspace (BELs)},%
text={BEL},%
plural={BELs},%
description={Basic Element},%
descriptionplural={Basic Element\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Basic Element},%
longplural={Basic Elements},%
short={BEL},%
shortplural={BELs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ISCAS}{}%
{%
\gls@defglossaryentry{ISCAS}%
{%
name={ISCAS},%
sort={ISCAS},%
type={acronym},%
first={IEEE International Symposium on Circuits and Systems\glsspace (ISCAS)},%
firstplural={IEEE International Symposium on Circuits and Systemss\glsspace (ISCASs)},%
text={ISCAS},%
plural={ISCASs},%
description={IEEE International Symposium on Circuits and Systems},%
descriptionplural={IEEE International Symposium on Circuits and Systems\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={IEEE International Symposium on Circuits and Systems},%
longplural={IEEE International Symposium on Circuits and Systemss},%
short={ISCAS},%
shortplural={ISCASs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{UCF}{}%
{%
\gls@defglossaryentry{UCF}%
{%
name={UCF},%
sort={UCF},%
type={acronym},%
first={User Constraint File\glsspace (UCF)},%
firstplural={User Constraint Files\glsspace (UCFs)},%
text={UCF},%
plural={UCFs},%
description={User Constraint File},%
descriptionplural={User Constraint File\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={User Constraint File},%
longplural={User Constraint Files},%
short={UCF},%
shortplural={UCFs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{API}{}%
{%
\gls@defglossaryentry{API}%
{%
name={API},%
sort={API},%
type={acronym},%
first={Application Programming Interface\glsspace (API)},%
firstplural={Application Programming Interfaces\glsspace (APIs)},%
text={API},%
plural={APIs},%
description={Application Programming Interface},%
descriptionplural={Application Programming Interface\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Application Programming Interface},%
longplural={Application Programming Interfaces},%
short={API},%
shortplural={APIs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{APIs}{}%
{%
\gls@defglossaryentry{APIs}%
{%
name={API},%
sort={API},%
type={acronym},%
first={Application Programming Interfaces\glsspace (API)},%
firstplural={Application Programming Interfacess\glsspace (APIs)},%
text={API},%
plural={APIs},%
description={Application Programming Interfaces},%
descriptionplural={Application Programming Interfaces\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Application Programming Interfaces},%
longplural={Application Programming Interfacess},%
short={API},%
shortplural={APIs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{CAD}{}%
{%
\gls@defglossaryentry{CAD}%
{%
name={CAD},%
sort={CAD},%
type={acronym},%
first={Computer Aided Design\glsspace (CAD)},%
firstplural={Computer Aided Designs\glsspace (CADs)},%
text={CAD},%
plural={CADs},%
description={Computer Aided Design},%
descriptionplural={Computer Aided Design\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Computer Aided Design},%
longplural={Computer Aided Designs},%
short={CAD},%
shortplural={CADs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{IO}{}%
{%
\gls@defglossaryentry{IO}%
{%
name={IO},%
sort={IO},%
type={acronym},%
first={Input-Output\glsspace (IO)},%
firstplural={Input-Outputs\glsspace (IOs)},%
text={IO},%
plural={IOs},%
description={Input-Output},%
descriptionplural={Input-Output\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Input-Output},%
longplural={Input-Outputs},%
short={IO},%
shortplural={IOs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{BRAM}{}%
{%
\gls@defglossaryentry{BRAM}%
{%
name={BRAM},%
sort={BRAM},%
type={acronym},%
first={Block RAM\glsspace (BRAM)},%
firstplural={Block RAMs\glsspace (BRAMs)},%
text={BRAM},%
plural={BRAMs},%
description={Block RAM},%
descriptionplural={Block RAM\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Block RAM},%
longplural={Block RAMs},%
short={BRAM},%
shortplural={BRAMs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{SRAM}{}%
{%
\gls@defglossaryentry{SRAM}%
{%
name={SRAM},%
sort={SRAM},%
type={acronym},%
first={Static RAM\glsspace (SRAM)},%
firstplural={Static RAMs\glsspace (SRAMs)},%
text={SRAM},%
plural={SRAMs},%
description={Static RAM},%
descriptionplural={Static RAM\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Static RAM},%
longplural={Static RAMs},%
short={SRAM},%
shortplural={SRAMs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{CMD}{}%
{%
\gls@defglossaryentry{CMD}%
{%
name={CMD},%
sort={CMD},%
type={acronym},%
first={Command Register\glsspace (CMD)},%
firstplural={Command Registers\glsspace (CMDs)},%
text={CMD},%
plural={CMDs},%
description={Command Register},%
descriptionplural={Command Register\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Command Register},%
longplural={Command Registers},%
short={CMD},%
shortplural={CMDs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{WCFG}{}%
{%
\gls@defglossaryentry{WCFG}%
{%
name={WCFG},%
sort={WCFG},%
type={acronym},%
first={CMD Write Packet Data\glsspace (WCFG)},%
firstplural={CMD Write Packet Datas\glsspace (WCFGs)},%
text={WCFG},%
plural={WCFGs},%
description={CMD Write Packet Data},%
descriptionplural={CMD Write Packet Data\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={CMD Write Packet Data},%
longplural={CMD Write Packet Datas},%
short={WCFG},%
shortplural={WCFGs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{MSK}{}%
{%
\gls@defglossaryentry{MSK}%
{%
name={MSK},%
sort={MSK},%
type={acronym},%
first={Readback Mask File\glsspace (MSK)},%
firstplural={Readback Mask Files\glsspace (MSKs)},%
text={MSK},%
plural={MSKs},%
description={Readback Mask File},%
descriptionplural={Readback Mask File\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Readback Mask File},%
longplural={Readback Mask Files},%
short={MSK},%
shortplural={MSKs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{appName}{}%
{%
\gls@defglossaryentry{appName}%
{%
name={\textit {F-TRAP}},%
sort={\textit {F-TRAP}},%
type={acronym},%
first={\acrshort {FPGA} Trojan Recognition and Parsing\glsspace (\protect \textit {F-TRAP})},%
firstplural={\acrshort {FPGA} Trojan Recognition and Parsings\glsspace (\protect \textit {F-TRAP}s)},%
text={\protect \textit {F-TRAP}},%
plural={\protect \textit {F-TRAP}s},%
description={\acrshort {FPGA} Trojan Recognition and Parsing},%
descriptionplural={\acrshort {FPGA} Trojan Recognition and Parsing\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={\acrshort {FPGA} Trojan Recognition and Parsing},%
longplural={\acrshort {FPGA} Trojan Recognition and Parsings},%
short={\protect \textit {F-TRAP}},%
shortplural={\protect \textit {F-TRAP}s},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{FLR}{}%
{%
\gls@defglossaryentry{FLR}%
{%
name={FLR},%
sort={FLR},%
type={acronym},%
first={Frame Length Register\glsspace (FLR)},%
firstplural={Frame Length Registers\glsspace (FLRs)},%
text={FLR},%
plural={FLRs},%
description={Frame Length Register},%
descriptionplural={Frame Length Register\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Frame Length Register},%
longplural={Frame Length Registers},%
short={FLR},%
shortplural={FLRs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{IC}{}%
{%
\gls@defglossaryentry{IC}%
{%
name={IC},%
sort={IC},%
type={acronym},%
first={Integrated Circuit\glsspace (IC)},%
firstplural={Integrated Circuits\glsspace (ICs)},%
text={IC},%
plural={ICs},%
description={Integrated Circuit},%
descriptionplural={Integrated Circuit\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Integrated Circuit},%
longplural={Integrated Circuits},%
short={IC},%
shortplural={ICs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ICs}{}%
{%
\gls@defglossaryentry{ICs}%
{%
name={IC},%
sort={IC},%
type={acronym},%
first={Integrated Circuits\glsspace (IC)},%
firstplural={Integrated Circuitss\glsspace (ICs)},%
text={IC},%
plural={ICs},%
description={Integrated Circuits},%
descriptionplural={Integrated Circuits\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Integrated Circuits},%
longplural={Integrated Circuitss},%
short={IC},%
shortplural={ICs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{PLD}{}%
{%
\gls@defglossaryentry{PLD}%
{%
name={PLD},%
sort={PLD},%
type={acronym},%
first={Programmable Logic Device\glsspace (PLD)},%
firstplural={Programmable Logic Devices\glsspace (PLDs)},%
text={PLD},%
plural={PLDs},%
description={Programmable Logic Device},%
descriptionplural={Programmable Logic Device\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Programmable Logic Device},%
longplural={Programmable Logic Devices},%
short={PLD},%
shortplural={PLDs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{PLDs}{}%
{%
\gls@defglossaryentry{PLDs}%
{%
name={PLD},%
sort={PLD},%
type={acronym},%
first={Programmable Logic Devices\glsspace (PLD)},%
firstplural={Programmable Logic Devicess\glsspace (PLDs)},%
text={PLD},%
plural={PLDs},%
description={Programmable Logic Devices},%
descriptionplural={Programmable Logic Devices\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Programmable Logic Devices},%
longplural={Programmable Logic Devicess},%
short={PLD},%
shortplural={PLDs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ERAI}{}%
{%
\gls@defglossaryentry{ERAI}%
{%
name={ERAI},%
sort={ERAI},%
type={acronym},%
first={Electronic Resellers Association International\glsspace (ERAI)},%
firstplural={Electronic Resellers Association Internationals\glsspace (ERAIs)},%
text={ERAI},%
plural={ERAIs},%
description={Electronic Resellers Association International},%
descriptionplural={Electronic Resellers Association International\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Electronic Resellers Association International},%
longplural={Electronic Resellers Association Internationals},%
short={ERAI},%
shortplural={ERAIs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{BA}{}%
{%
\gls@defglossaryentry{BA}%
{%
name={BA},%
sort={BA},%
type={acronym},%
first={Block Address\glsspace (BA)},%
firstplural={Block Addresss\glsspace (BAs)},%
text={BA},%
plural={BAs},%
description={Block Address},%
descriptionplural={Block Address\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Block Address},%
longplural={Block Addresss},%
short={BA},%
shortplural={BAs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{GCLK}{}%
{%
\gls@defglossaryentry{GCLK}%
{%
name={GCLK},%
sort={GCLK},%
type={acronym},%
first={Global Clock\glsspace (GCLK)},%
firstplural={Global Clocks\glsspace (GCLKs)},%
text={GCLK},%
plural={GCLKs},%
description={Global Clock},%
descriptionplural={Global Clock\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Global Clock},%
longplural={Global Clocks},%
short={GCLK},%
shortplural={GCLKs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{PC}{}%
{%
\gls@defglossaryentry{PC}%
{%
name={PC},%
sort={PC},%
type={acronym},%
first={Personal Computer\glsspace (PC)},%
firstplural={Personal Computers\glsspace (PCs)},%
text={PC},%
plural={PCs},%
description={Personal Computer},%
descriptionplural={Personal Computer\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Personal Computer},%
longplural={Personal Computers},%
short={PC},%
shortplural={PCs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{BYU}{}%
{%
\gls@defglossaryentry{BYU}%
{%
name={BYU},%
sort={BYU},%
type={acronym},%
first={Brigham Young University\glsspace (BYU)},%
firstplural={Brigham Young Universitys\glsspace (BYUs)},%
text={BYU},%
plural={BYUs},%
description={Brigham Young University},%
descriptionplural={Brigham Young University\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Brigham Young University},%
longplural={Brigham Young Universitys},%
short={BYU},%
shortplural={BYUs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{HTS}{}%
{%
\gls@defglossaryentry{HTS}%
{%
name={HTS},%
sort={HTS},%
type={acronym},%
first={Hardware Trojan System\glsspace (HTS)},%
firstplural={Hardware Trojan Systems\glsspace (HTSs)},%
text={HTS},%
plural={HTSs},%
description={Hardware Trojan System},%
descriptionplural={Hardware Trojan System\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Hardware Trojan System},%
longplural={Hardware Trojan Systems},%
short={HTS},%
shortplural={HTSs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{log}{}%
{%
\gls@defglossaryentry{log}%
{%
name={log},%
sort={log},%
type={main},%
first={log},%
firstplural={logs},%
text={log},%
plural={logs},%
description={A log file generated by XST},%
descriptionplural={A log file generated by XST},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Bitstream}{}%
{%
\gls@defglossaryentry{Bitstream}%
{%
name={Bitstream},%
sort={Bitstream},%
type={main},%
first={Bitstream},%
firstplural={Bitstreams},%
text={Bitstream},%
plural={Bitstreams},%
description={The sequence of one and zeroes which makes up the configuration data},%
descriptionplural={The sequence of one and zeroes which makes up the configuration data},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Bit}{}%
{%
\gls@defglossaryentry{Bit}%
{%
name={Bit},%
sort={Bit},%
type={main},%
first={Bit},%
firstplural={Bits},%
text={Bit},%
plural={Bits},%
description={The binary file containing the configuration data for the implementation},%
descriptionplural={The binary file containing the configuration data for the implementation},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Vivado}{}%
{%
\gls@defglossaryentry{Vivado}%
{%
name={Vivado},%
sort={Vivado},%
type={main},%
first={Vivado},%
firstplural={Vivados},%
text={Vivado},%
plural={Vivados},%
description={The Integrated Development Environment Used Exclusively for 7-series FPGAs},%
descriptionplural={The Integrated Development Environment Used Exclusively for 7-series FPGAs},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Xilinx}{}%
{%
\gls@defglossaryentry{Xilinx}%
{%
name={Xilinx},%
sort={Xilinx},%
type={main},%
first={Xilinx},%
firstplural={Xilinxs},%
text={Xilinx},%
plural={Xilinxs},%
description={an American technology company, primarily a supplier of programmable logic devices. It is known for inventing the field-programmable gate array (FPGA) and as the first semiconductor company with a fabless manufacturing model.},%
descriptionplural={an American technology company, primarily a supplier of programmable logic devices. It is known for inventing the field-programmable gate array (FPGA) and as the first semiconductor company with a fabless manufacturing model.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Readback}{}%
{%
\gls@defglossaryentry{Readback}%
{%
name={Readback},%
sort={Readback},%
type={main},%
first={Readback},%
firstplural={Readbacks},%
text={Readback},%
plural={Readbacks},%
description={A feature in all \Xilinx FPGAs where by the current state of the \gls {gateArray} is stored in the configuration memory to be read by the user via the JTAG port},%
descriptionplural={A feature in all \Xilinx FPGAs where by the current state of the \gls {gateArray} is stored in the configuration memory to be read by the user via the JTAG port},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{SelectMap}{}%
{%
\gls@defglossaryentry{SelectMap}%
{%
name={SelectMap},%
sort={SelectMap},%
type={main},%
first={SelectMap},%
firstplural={SelectMaps},%
text={SelectMap},%
plural={SelectMaps},%
description={A \Xilinx device configuration mode which allows for the programming of multiple devices in parallel},%
descriptionplural={A \Xilinx device configuration mode which allows for the programming of multiple devices in parallel},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{golden}{}%
{%
\gls@defglossaryentry{golden}%
{%
name={Golden},%
sort={Golden},%
type={main},%
first={Golden},%
firstplural={Goldens},%
text={Golden},%
plural={Goldens},%
description={The clean, untampered version of the synthesis files generated by XST},%
descriptionplural={The clean, untampered version of the synthesis files generated by XST},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{target}{}%
{%
\gls@defglossaryentry{target}%
{%
name={Target},%
sort={Target},%
type={main},%
first={Target},%
firstplural={Targets},%
text={Target},%
plural={Targets},%
description={The generated files from devices received from the third-party fabrication house},%
descriptionplural={The generated files from devices received from the third-party fabrication house},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Library}{}%
{%
\gls@defglossaryentry{Library}%
{%
name={\textit {Library}},%
sort={\textit {Library}},%
type={main},%
first={\protect \textit {Library}},%
firstplural={\protect \textit {Library}s},%
text={\protect \textit {Library}},%
plural={\protect \textit {Library}s},%
description={The list of absolute addresses for all components in a \gls {gateArray}},%
descriptionplural={The list of absolute addresses for all components in a \gls {gateArray}},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{NGC}{}%
{%
\gls@defglossaryentry{NGC}%
{%
name={NGC},%
sort={NGC},%
type={main},%
first={NGC},%
firstplural={NGCs},%
text={NGC},%
plural={NGCs},%
description={The NGC file is a netlist that contains both logical design data and constraints. The NGC file takes the place of both \acrfull {EDIF} and \acrfull {NCF} files},%
descriptionplural={The NGC file is a netlist that contains both logical design data and constraints. The NGC file takes the place of both \acrfull {EDIF} and \acrfull {NCF} files},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Plan Ahead}{}%
{%
\gls@defglossaryentry{Plan Ahead}%
{%
name={Plan Ahead},%
sort={Plan Ahead},%
type={main},%
first={Plan Ahead},%
firstplural={Plan Aheads},%
text={Plan Ahead},%
plural={Plan Aheads},%
description={Software provided by \Xilinx for RTL to bitstream design flow management},%
descriptionplural={Software provided by \Xilinx for RTL to bitstream design flow management},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{RAM16}{}%
{%
\gls@defglossaryentry{RAM16}%
{%
name={RAM16},%
sort={RAM16},%
type={main},%
first={RAM16},%
firstplural={RAM16s},%
text={RAM16},%
plural={RAM16s},%
description={\acrshort {LUT} used as a 16x1 memory unit},%
descriptionplural={\acrshort {LUT} used as a 16x1 memory unit},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{SRL16}{}%
{%
\gls@defglossaryentry{SRL16}%
{%
name={SRL16},%
sort={SRL16},%
type={main},%
first={SRL16},%
firstplural={SRL16s},%
text={SRL16},%
plural={SRL16s},%
description={\acrshort {LUT} used as a 16-bit shift register},%
descriptionplural={\acrshort {LUT} used as a 16-bit shift register},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{SLICEM}{}%
{%
\gls@defglossaryentry{SLICEM}%
{%
name={SLICEM},%
sort={SLICEM},%
type={main},%
first={SLICEM},%
firstplural={SLICEMs},%
text={SLICEM},%
plural={SLICEMs},%
description={A component of a \acrshort {CLB} in the Spartan-3E family of \acrshort {FPGA}s capable of both logic and memory functions},%
descriptionplural={A component of a \acrshort {CLB} in the Spartan-3E family of \acrshort {FPGA}s capable of both logic and memory functions},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{SLICEL}{}%
{%
\gls@defglossaryentry{SLICEL}%
{%
name={SLICEL},%
sort={SLICEL},%
type={main},%
first={SLICEL},%
firstplural={SLICELs},%
text={SLICEL},%
plural={SLICELs},%
description={A component of a \acrshort {CLB} in the Spartan-3E family of \acrshort {FPGA}s capable of only logic functions},%
descriptionplural={A component of a \acrshort {CLB} in the Spartan-3E family of \acrshort {FPGA}s capable of only logic functions},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{sch2hdl}{}%
{%
\gls@defglossaryentry{sch2hdl}%
{%
name={sch2hdl},%
sort={sch2hdl},%
type={main},%
first={sch2hdl},%
firstplural={sch2hdls},%
text={sch2hdl},%
plural={sch2hdls},%
description={used to convert schematic designs to \gls {HDL}. This stage is optional as many choose to develop directly in \acrshort {HDL}},%
descriptionplural={used to convert schematic designs to \gls {HDL}. This stage is optional as many choose to develop directly in \acrshort {HDL}},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{XST}{}%
{%
\gls@defglossaryentry{XST}%
{%
name={XST},%
sort={XST},%
type={acronym},%
first={\protect \textit {Xilinx}\protect \nobreakspace {}Synthesis Tools\glsspace (XST)},%
firstplural={\protect \textit {Xilinx}\protect \nobreakspace {}Synthesis Toolss\glsspace (XSTs)},%
text={XST},%
plural={XSTs},%
description={\Xilinx Synthesis Tools},%
descriptionplural={\Xilinx Synthesis Tools\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={\protect \textit {Xilinx}\protect \nobreakspace {}Synthesis Tools},%
longplural={\protect \textit {Xilinx}\protect \nobreakspace {}Synthesis Toolss},%
short={XST},%
shortplural={XSTs},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ngdbuild}{}%
{%
\gls@defglossaryentry{ngdbuild}%
{%
name={ngdbuild},%
sort={ngdbuild},%
type={main},%
first={ngdbuild},%
firstplural={ngdbuilds},%
text={ngdbuild},%
plural={ngdbuilds},%
description={A tool used to build a NETLIST.},%
descriptionplural={A tool used to build a NETLIST.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{MAP}{}%
{%
\gls@defglossaryentry{MAP}%
{%
name={MAP},%
sort={MAP},%
type={main},%
first={MAP},%
firstplural={MAPs},%
text={MAP},%
plural={MAPs},%
description={A \gls {Xilinx} tool used to calculate the optimal routing for the finalized design.},%
descriptionplural={A \gls {Xilinx} tool used to calculate the optimal routing for the finalized design.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{PAR}{}%
{%
\gls@defglossaryentry{PAR}%
{%
name={PAR},%
sort={PAR},%
type={main},%
first={PAR},%
firstplural={PARs},%
text={PAR},%
plural={PARs},%
description={used to place and route the design in the specific \Xilinx device.},%
descriptionplural={used to place and route the design in the specific \Xilinx device.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{trce}{}%
{%
\gls@defglossaryentry{trce}%
{%
name={trce},%
sort={trce},%
type={main},%
first={trce},%
firstplural={trces},%
text={trce},%
plural={trces},%
description={used to perform timing and performance analysis.},%
descriptionplural={used to perform timing and performance analysis.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Bitgen}{}%
{%
\gls@defglossaryentry{Bitgen}%
{%
name={Bitgen},%
sort={Bitgen},%
type={main},%
first={Bitgen},%
firstplural={Bitgens},%
text={Bitgen},%
plural={Bitgens},%
description={The final stage used to generate the configuration \gls {Bitstream} which will configure the device.},%
descriptionplural={The final stage used to generate the configuration \gls {Bitstream} which will configure the device.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{xdl2ndc}{}%
{%
\gls@defglossaryentry{xdl2ndc}%
{%
name={xdl2ndc},%
sort={xdl2ndc},%
type={main},%
first={xdl2ndc},%
firstplural={xdl2ndcs},%
text={xdl2ndc},%
plural={xdl2ndcs},%
description={A command line tool used to convert between the non human-readable ndc netlist format and the human readable \acrshort {XDL} format.},%
descriptionplural={A command line tool used to convert between the non human-readable ndc netlist format and the human readable \acrshort {XDL} format.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{thread}{}%
{%
\gls@defglossaryentry{thread}%
{%
name={thread},%
sort={thread},%
type={main},%
first={thread},%
firstplural={threads},%
text={thread},%
plural={threads},%
description={The smallest sequence of programmed instructions that can be managed independently by a scheduler, which is typically a part of the operating system.},%
descriptionplural={The smallest sequence of programmed instructions that can be managed independently by a scheduler, which is typically a part of the operating system.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Group}{}%
{%
\gls@defglossaryentry{Group}%
{%
name={Group},%
sort={Group},%
type={main},%
first={Group},%
firstplural={Groups},%
text={Group},%
plural={Groups},%
description={A collection of columns of 1-bit wide components in an FPGA},%
descriptionplural={A collection of columns of 1-bit wide components in an FPGA},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{FragementMatrix}{}%
{%
\gls@defglossaryentry{FragementMatrix}%
{%
name={Fragement Matrix},%
sort={Fragement Matrix},%
type={main},%
first={Fragement Matrix},%
firstplural={Fragement Matrixs},%
text={Fragement Matrix},%
plural={Fragement Matrixs},%
description={A conceptual interpretation of the architecture of an FPGA where by it is imagined as a matrix of 1-bit configurable components},%
descriptionplural={A conceptual interpretation of the architecture of an FPGA where by it is imagined as a matrix of 1-bit configurable components},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{QT}{}%
{%
\gls@defglossaryentry{QT}%
{%
name={QT},%
sort={QT},%
type={main},%
first={QT},%
firstplural={QTs},%
text={QT},%
plural={QTs},%
description={a cross-platform application framework that is widely used for developing application software that can be run on various software and hardware platforms. It provides easy to use \acrshort {UI} design tools and features used for this project.~\cite {QT}},%
descriptionplural={a cross-platform application framework that is widely used for developing application software that can be run on various software and hardware platforms. It provides easy to use \acrshort {UI} design tools and features used for this project.~\cite {QT}},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Boost}{}%
{%
\gls@defglossaryentry{Boost}%
{%
name={Boost},%
sort={Boost},%
type={main},%
first={Boost},%
firstplural={Boosts},%
text={Boost},%
plural={Boosts},%
description={a set of libraries for the C++ programming language that provide support for tasks and structures such as linear algebra, pseudorandom number generation, multithreading, image processing, regular expressions, and unit testing.~\cite {boostLibrary}},%
descriptionplural={a set of libraries for the C++ programming language that provide support for tasks and structures such as linear algebra, pseudorandom number generation, multithreading, image processing, regular expressions, and unit testing.~\cite {boostLibrary}},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{winAPI}{}%
{%
\gls@defglossaryentry{winAPI}%
{%
name={Windows \gls {API}},%
sort={Windows \gls {API}},%
type={main},%
first={Windows \gls {API}},%
firstplural={Windows \gls {API}s},%
text={Windows \gls {API}},%
plural={Windows \gls {API}s},%
description={Windows API or WinAPI is a core set of Microsoft's \acrshort {API}s available within the Windows Operating System. It provides basic \acrshort {UI}, Environment handling, data access and storage utilities and more.~\cite {windowsAPI}},%
descriptionplural={Windows API or WinAPI is a core set of Microsoft's \acrshort {API}s available within the Windows Operating System. It provides basic \acrshort {UI}, Environment handling, data access and storage utilities and more.~\cite {windowsAPI}},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Fragment}{}%
{%
\gls@defglossaryentry{Fragment}%
{%
name={Fragment},%
sort={Fragment},%
type={main},%
first={Fragment},%
firstplural={Fragments},%
text={Fragment},%
plural={Fragments},%
description={A 1-bit configurable component of an FPGA. Fragments do not exist however they are used as a conceptual aid to improve understanding of configuration process.},%
descriptionplural={A 1-bit configurable component of an FPGA. Fragments do not exist however they are used as a conceptual aid to improve understanding of configuration process.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{gateArray}{}%
{%
\gls@defglossaryentry{gateArray}%
{%
name={Gate Array},%
sort={Gate Array},%
type={main},%
first={Gate Array},%
firstplural={Gate Arrays},%
text={Gate Array},%
plural={Gate Arrays},%
description={The primary structure of an \gls {FPGA} device. Composed of a regular arrangement of logic gates.},%
descriptionplural={The primary structure of an \gls {FPGA} device. Composed of a regular arrangement of logic gates.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{positionMedian}{}%
{%
\gls@defglossaryentry{positionMedian}%
{%
name={Position Median},%
sort={Position Median},%
type={main},%
first={Position Median},%
firstplural={Position Medians},%
text={Position Median},%
plural={Position Medians},%
description={The computed center of an \acrshort {FPGA} design},%
descriptionplural={The computed center of an \acrshort {FPGA} design},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{scatterScore}{}%
{%
\gls@defglossaryentry{scatterScore}%
{%
name={Scatter Score},%
sort={Scatter Score},%
type={main},%
first={Scatter Score},%
firstplural={Scatter Scores},%
text={Scatter Score},%
plural={Scatter Scores},%
description={A numeric representation of the clustering of a design},%
descriptionplural={A numeric representation of the clustering of a design},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
